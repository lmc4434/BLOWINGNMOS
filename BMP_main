/*
* Rochester Institute of Technology
* Department of Computer Engineering
* CMPE 460  Interfacing Digital Electronics
* LJBeato
* 1/14/2021
*
* Filename: BMP_Main.c
*/
#include <stdio.h>
#include <stdlib.h>

#include "msp.h"
#include "uart.h"
#include "Timer32.h"
#include "CortexM.h"
#include "Common.h"
#include "ADC.h"
#include "controlpins.h"

extern unsigned int ADC_val;
extern BOOLEAN g_sendData;

unsigned long MillisecondCounter = 0;
unsigned long temp = 0;
static char str[10];
unsigned long BPM = 0;
BOOLEAN timer_run = 0;
BOOLEAN valley = 0;
unsigned int val = 0;
unsigned int next_val = 0;

// ADC_In() gets the latest value from the ADC
// ADC will be P4.7 A6

void myDelay(void)
{
	volatile int j = 0;
	for (j = 0; j < 8000000; j++)
	{
		;
	}
}

void Timer32_2_ISR(void)
{

		MillisecondCounter++;

}

int main (void){
	DisableInterrupts();
	uart0_init();
	uart0_put("Initialize UFART to Brint\r");
	ControlPin_SI_Init();
	ControlPin_CLK_Init();
	ADC0_InitSWTriggerCh6();
	// Setup Timer32-2 with a .001 second timeout.
	// So use DEFAULT_CLOCK_SPEED/(1/0.001) = SystemCoreClock/1000
	Timer32_2_Init(&Timer32_2_ISR, SystemCoreClock/1000, T32DIV1); // initialize Timer A32-1;
	EnableInterrupts();
	
	while(1){
				//uart0_put("ADC VAL: ");
				//sprintf(str,"%i\n\r",ADC_val); 
				//uart0_put(str);
		/*
			for (int i = 0; i < 128; i++) 
			{
				if(line[i] == 16383){
					beat[i] = 1;
				} else {
					beat[i] = 0;
				}
			}

			for (int i = 0; i < 128; i++) 
			{
				if(beat[i] == 1){
					MillisecondCounter = 0;
					timer_run = 1;
				}
				if(timer_run && beat[i] == 0){
					valley = 1;
				}
				else if(beat[i] == 1 && valley){
					temp = MillisecondCounter;
					timer_run = 0;
					valley = 0;
				}
			}
			*/
			/*
			int peak = 0;
			int valley = 0;
			if(ADC_val != next_val){
				ADC_val = next_val;
				if (ADC_val > next_val && peak == 0){
					MillisecondCounter = 0;
					peak = 1;
				}
				else if(ADC_val < next_val && valley == 0){
					valley = 1;
				}
				else if (ADC_val > next_val && valley == 1){
					temp = MillisecondCounter;
					peak = 0;
					valley = 0;
					BPM = temp * 60000;
					uart0_put("BPM: ");
					sprintf(str,"%lu\n\r", BPM);
					uart0_put(str);
				}
			} */
			
			/*
			if(ADC_val == 16383){
					MillisecondCounter = 0;
					timer_run = 1;
				}
			if(timer_run && ADC_val < 16383){
					valley = 1;
				}
				else if(ADC_val == 16383 && valley){
					temp = MillisecondCounter;
					timer_run = 0;
					valley = 0;
					
					BPM = temp * 60000;
					uart0_put("BPM: ");
					sprintf(str,"%lu\n\r", BPM);
					uart0_put(str);
				}
			*/
				

			/*if(line[i] == val){
					MillisecondCounter = 0;
				}
				if(line[i] == val){
					temp = MillisecondCounter;
				}
				
			*/
			//Do for loop to find the amount of peaks in the ADC data
			//Use MS counter from previous lab and scale to BPM (Timer 32)
			//uart0_put("BMP: ");
			//sprintf(str,"%i\n\r",BPM); 
			//uart0_put(str);
	}
}
